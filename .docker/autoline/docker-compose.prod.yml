version: "3.8"

# Using `node_modules` mounting pattern described here:
# https://burnedikt.com/dockerized-node-development-and-mounting-node-volumes/#prevent-hosts-node_modules-from-being-mounted

services:
  autoline_mariadb:
    container_name: autoline_mariadb
    build:
      context: ../../
      dockerfile: database/Dockerfile
    restart: on-failure
    ports:
      - "3307:3306"
    networks:
      - autoline_backend_network
    env_file:
      - ../../.env/backend.env
    volumes:
      - autoline_mariadb_data:/var/lib/mysql

  autoline_backend:
    container_name: autoline_backend
    depends_on:
      - autoline_mariadb
    build:
      context: ../../
      dockerfile: backend/Dockerfile.prod
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ../../.env/backend.env
    environment:
      - FRONTEND_URL=http://autoline_frontend:80
    networks:
      - autoline_backend_network
      - autoline_frontend_network

  autoline_frontend:
    container_name: autoline_frontend
    depends_on:
      - autoline_backend
    build:
      context: ../../
      dockerfile: frontend/Dockerfile.prod
    restart: unless-stopped
    ports:
      - "3000:80"
    env_file:
      - ../../.env/frontend.env
    environment:
      - VITE_API_ORIGIN_URL=http://autoline_backend:3001/api/v1
    networks:
      - autoline_backend_network
      - autoline_frontend_network

  autoline_frontend_auto_ssl:
    image: valian/docker-nginx-auto-ssl
    depends_on:
      - autoline_frontend
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    networks:
      - autoline_backend_network
      - autoline_frontend_network
    volumes:
      - autoline_frontend_auto_ssl_data:/etc/resty-auto-ssl
      - ./:/etc/nginx/conf.d
    env_file:
      - ../../.env/frontend.env
    environment:
      ALLOWED_DOMAINS: 'autoline-not-autoria.xyz'
      SITES: 'autoline-not-autoria.xyz=autoline_frontend:80'

volumes:
  autoline_mariadb_data:
    driver: local
  autoline_frontend_auto_ssl_data:
    driver: local

networks:
  autoline_backend_network:
    driver: bridge
  autoline_frontend_network:
    driver: bridge
