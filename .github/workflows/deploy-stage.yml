name: Deploy staging

on:
  push:
    branches:
      - develop
      - awss3
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: autoline-backend-dev
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/autoline/backend.Dockerfile
  build-frontend:
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: autoline-frontend-dev
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/autoline/frontend.Dockerfile
          build_extra_args: "--build-arg=VITE_API_ORIGIN_URL=${{ secrets.VITE_APP_API_ORIGIN_URL }}"

  prenotify:
    needs: [ build-backend, build-frontend ]
    runs-on: ubuntu-latest
    if: always()
    environment: development
    steps:
      - name: Trigger this job at the end of workflow
        uses: technote-space/workflow-conclusion-action@v2

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: Deployment Bot
          SLACK_ICON: https://avatar-prod-us-east-2.webexcontent.com/Avtr~V1~6078fba4-49d9-4291-9f7b-80116aab6974/V1~8d90dcca-87c5-4a7c-9808-8965a02be966~07b1fecf53a948688dabf01402621a0a
          SLACK_MESSAGE: "Deployment Started"
          SLACK_FOOTER: "Cross Fingers"
          MSG_MINIMAL: event,actions url

  deploy:
    needs: [ build-backend, build-frontend ]
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy docker-compose.stage.yml to deployment server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: ".docker/autoline/docker-compose.stage.yml,.docker/autoline/nginx/nginx.rtmp.conf,.docker/autoline/database/Dockerfile,.docker/autoline/database/user_privileges.sql,.docker/autoline/nginx/nginx.conf"
          target: app

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Load secret files
        run: |
          aws s3 cp s3://${{ secrets.AWS_BUCKET_NAME }}/${{ secrets.AWS_BUCKET_WEB_SECRETS_PATH }}/ /home/ubuntu/app/.env --recursive

      - name: Run docker-compose.stage.yml on deployment server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: GITHUB_USERNAME,GITHUB_TOKEN
          script: |
            cd app/.docker/autoline
            export GITHUB_USERNAME=$GITHUB_USERNAME
            export GITHUB_TOKEN=$GITHUB_TOKEN
            echo "$GITHUB_TOKEN" | sudo docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            sudo docker compose -f docker-compose.stage.yml rm --force --stop
            sudo docker compose -f docker-compose.stage.yml pull
            sudo docker compose -f docker-compose.stage.yml up -d
            sudo docker image prune -a -f
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    environment: development
    steps:
      - name: Trigger this job at the end of workflow
        uses: technote-space/workflow-conclusion-action@v2

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: Deployment Bot
          SLACK_ICON: https://avatar-prod-us-east-2.webexcontent.com/Avtr~V1~6078fba4-49d9-4291-9f7b-80116aab6974/V1~8d90dcca-87c5-4a7c-9808-8965a02be966~07b1fecf53a948688dabf01402621a0a
          SLACK_MESSAGE: "Deployment finished with ${{ env.WORKFLOW_CONCLUSION == 'success' && 'Success ðŸŸ¢' || env.WORKFLOW_CONCLUSION == 'cancelled' && 'Cancelled ðŸŸ¡' || env.WORKFLOW_CONCLUSION == 'skipped' && 'Skipped ðŸ”µ' || 'Error ðŸ”´' }} result"
          SLACK_FOOTER: "Git branch: `develop`"
          MSG_MINIMAL: event,actions url
