name: deploy-prod

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        image_name: autoline-frontend-development
        registry: ghcr.io
        context: ./
        dockerfile: ./frontend/Dockerfile.prod
        build_extra_args: "--build-arg=REACT_APP_API_ORIGIN_URL=/api/v1"

  deploy:
    needs: [build-frontend]
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Copy docker-compose.yml to deployment server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
        source: .docker/autoline/docker-compose.prod.yml
        target: app

    - name: Run docker-compose.yml on deployment server
      uses: appleboy/ssh-action@master
      env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
        envs: GITHUB_USERNAME,GITHUB_TOKEN
        script: |
          export GITHUB_USERNAME=$GITHUB_USERNAME
          export GITHUB_TOKEN=$GITHUB_TOKEN
          echo "$GITHUB_TOKEN" | docker login ghcr.io -u $GITHUB_USERNAME -p $GITHUB_TOKEN
          cd app/.docker/autoline
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml stop
          docker-compose -f docker-compose.prod.yml up -d --build
